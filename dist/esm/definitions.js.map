{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA;;;GAGG","sourcesContent":["/**\n * @file definitions.ts\n * @description TypeScript type definitions for the LottieSplashScreen Capacitor plugin.\n */\n\nimport type { PluginListenerHandle } from '@capacitor/core';\n\n/**\n * @interface LottieSplashScreenPlugin\n * @description Defines the native methods and event listeners provided by the LottieSplashScreen plugin.\n *\n * This plugin allows developers to show animated Lottie-based splash screens during app startup.\n */\nexport interface LottieSplashScreenPlugin {\n  /**\n   * Notify the plugin that the app has fully loaded.\n   *\n   * Call this method as early as possible after your app has bootstrapped.\n   * It allows the plugin to gracefully finish or remove the splash animation overlay.\n   * If the splash is configured to loop, this will forcibly stop it.\n   *\n   * @example\n   * ```ts\n   * LottieSplashScreen.appLoaded();\n   * ```\n   *\n   * @since 7.0.0\n   */\n  appLoaded(): void;\n\n  /**\n   * Programmatically show the splash screen animation again.\n   *\n   * This is useful for scenarios like restarting the splash for a specific action or navigation flow.\n   *\n   * @example\n   * ```ts\n   * LottieSplashScreen.show();\n   * ```\n   *\n   * @since 7.0.0\n   */\n  show(): void;\n\n  /**\n   * Hide the splash screen immediately, skipping the animation completion.\n   *\n   * Use this when you want to forcefully remove the splash overlay (e.g., on error or timeout).\n   *\n   * @example\n   * ```ts\n   * LottieSplashScreen.hide();\n   * ```\n   *\n   * @since 7.0.0\n   */\n  hide(): void;\n\n  /**\n   * Check if the splash animation is currently running.\n   *\n   * Returns a boolean wrapped in a promise indicating the splash screenâ€™s active state.\n   *\n   * @returns A promise resolving to an object: `{ isAnimating: boolean }`\n   *\n   * @example\n   * ```ts\n   * const { isAnimating } = await LottieSplashScreen.isAnimating();\n   * console.log(isAnimating); // true or false\n   * ```\n   *\n   * @since 7.0.0\n   */\n  isAnimating(): Promise<{ isAnimating: boolean }>;\n\n  /**\n   * Register a listener for the splash animation end event.\n   *\n   * This event is triggered once the animation finishes and the overlay is removed.\n   *\n   * @param eventName - Must be `'onAnimationEnd'`\n   * @param listenerFunc - A callback function that runs when the animation completes.\n   * @returns A promise resolving to a `PluginListenerHandle` for removing the listener if needed.\n   *\n   * @example\n   * ```ts\n   * const handle = await LottieSplashScreen.addListener('onAnimationEnd', () => {\n   *   console.log('Splash animation finished');\n   * });\n   * ```\n   *\n   * @since 7.0.0\n   */\n  addListener(eventName: 'onAnimationEnd', listenerFunc: () => void): Promise<PluginListenerHandle>;\n}\n"]}