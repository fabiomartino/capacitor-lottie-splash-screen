{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAG5C;;;;;;;GAOG;AACH,MAAM,OAAO,qBAAsB,SAAQ,SAAS;IAClD;;OAEG;IACH,KAAK,CAAC,IAAI;QACR,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;QACnE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;QACzB,yCAAyC;IAC3C,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,IAAI;QACR,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;QACnE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;QACzB,yCAAyC;IAC3C,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,SAAS;QACb,OAAO,CAAC,IAAI,CAAC,yDAAyD,CAAC,CAAC;QACxE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;QACzB,yCAAyC;IAC3C,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,WAAW;QACf,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;IAChC,CAAC;CAUF","sourcesContent":["/**\n * @file web.ts\n * @description Web implementation of the LottieSplashScreen plugin.\n * This implementation is non-functional and serves as a fallback for web platforms.\n */\n\nimport { WebPlugin } from '@capacitor/core';\nimport type { LottieSplashScreenPlugin } from './definitions';\n\n/**\n * @class LottieSplashScreenWeb\n * @extends WebPlugin\n * @implements LottieSplashScreenPlugin\n *\n * Stub implementation for the web. All methods are either no-ops or throw unimplemented exceptions.\n *\n */\nexport class LottieSplashScreenWeb extends WebPlugin implements LottieSplashScreenPlugin {\n  /**\n   * Show the splash screen (not implemented on web).\n   */\n  async show(): Promise<void> {\n    console.warn('LottieSplashScreen show() is not supported on web.');\n    return Promise.resolve();\n    // throw this.createUnimplementedError();\n  }\n\n  /**\n   * Hide the splash screen (not implemented on web).\n   */\n  async hide(): Promise<void> {\n    console.warn('LottieSplashScreen hide() is not supported on web.');\n    return Promise.resolve();\n    // throw this.createUnimplementedError();\n  }\n\n  /**\n   * Notify that the app has loaded (not implemented on web).\n   */\n  async appLoaded(): Promise<void> {\n    console.warn('LottieSplashScreen appLoaded() is not supported on web.');\n    return Promise.resolve();\n    // throw this.createUnimplementedError();\n  }\n\n  /**\n   * Check if the splash screen is animating (always false on web).\n   *\n   * @returns A resolved promise with `{ isAnimating: false }`\n   */\n  async isAnimating(): Promise<{ isAnimating: boolean }> {\n    return { isAnimating: false };\n  }\n\n  /**\n   * Create a standardized exception for unimplemented web methods.\n   *\n   * @returns {CapacitorException} A descriptive exception with `Unimplemented` code.\n   */\n  // private createUnimplementedError(): CapacitorException {\n  //   return new CapacitorException('LottieSplashScreen is not supported on the web.', ExceptionCode.Unimplemented);\n  // }\n}\n"]}