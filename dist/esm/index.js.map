{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAGjD;;;;;;GAMG;AACH,MAAM,kBAAkB,GAAG,cAAc,CAA2B,oBAAoB,EAAE;IACxF;;;;;OAKG;IACH,GAAG,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,qBAAqB,EAAE,CAAC;CACpE,CAAC,CAAC;AAEH;;;GAGG;AACH,cAAc,eAAe,CAAC;AAE9B;;;GAGG;AACH,OAAO,EAAE,kBAAkB,EAAE,CAAC","sourcesContent":["/**\n * @file index.ts\n * @description Entry point for the LottieSplashScreen plugin.\n * This file defines the plugin's registration and export interfaces for all platforms.\n */\n\nimport { registerPlugin } from '@capacitor/core';\nimport type { LottieSplashScreenPlugin } from './definitions';\n\n/**\n * Registers the `LottieSplashScreen` plugin.\n *\n * - The plugin name `LottieSplashScreen` is used to bridge native implementations with the JavaScript runtime.\n * - On web, a stub implementation is dynamically imported to prevent runtime errors during PWA or dev server use.\n *\n */\nconst LottieSplashScreen = registerPlugin<LottieSplashScreenPlugin>('LottieSplashScreen', {\n  /**\n   * Dynamic import of the web fallback implementation.\n   * Used only in browser environments where native plugins are not available.\n   *\n   * @returns A Promise that resolves to the `LottieSplashScreenWeb` implementation.\n   */\n  web: () => import('./web').then(m => new m.LottieSplashScreenWeb()),\n});\n\n/**\n * Re-export plugin definitions for external TypeScript consumers.\n * This allows direct access to the `LottieSplashScreenPlugin` interface.\n */\nexport * from './definitions';\n\n/**\n * Exports the registered plugin instance.\n * Users can call methods like `LottieSplashScreen.show()` from their app code.\n */\nexport { LottieSplashScreen };"]}