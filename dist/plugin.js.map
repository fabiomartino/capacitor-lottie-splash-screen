{"version":3,"file":"plugin.js","sources":["esm/index.js","esm/web.js"],"sourcesContent":["/**\n * @file index.ts\n * @description Entry point for the LottieSplashScreen plugin.\n * This file defines the plugin's registration and export interfaces for all platforms.\n */\nimport { registerPlugin } from '@capacitor/core';\n/**\n * Registers the `LottieSplashScreen` plugin.\n *\n * - The plugin name `LottieSplashScreen` is used to bridge native implementations with the JavaScript runtime.\n * - On web, a stub implementation is dynamically imported to prevent runtime errors during PWA or dev server use.\n *\n */\nconst LottieSplashScreen = registerPlugin('LottieSplashScreen', {\n    /**\n     * Dynamic import of the web fallback implementation.\n     * Used only in browser environments where native plugins are not available.\n     *\n     * @returns A Promise that resolves to the `LottieSplashScreenWeb` implementation.\n     */\n    web: () => import('./web').then(m => new m.LottieSplashScreenWeb()),\n});\n/**\n * Re-export plugin definitions for external TypeScript consumers.\n * This allows direct access to the `LottieSplashScreenPlugin` interface.\n */\nexport * from './definitions';\n/**\n * Exports the registered plugin instance.\n * Users can call methods like `LottieSplashScreen.show()` from their app code.\n */\nexport { LottieSplashScreen };\n//# sourceMappingURL=index.js.map","/**\n * @file web.ts\n * @description Web implementation of the LottieSplashScreen plugin.\n * This implementation is non-functional and serves as a fallback for web platforms.\n */\nimport { WebPlugin } from '@capacitor/core';\n/**\n * @class LottieSplashScreenWeb\n * @extends WebPlugin\n * @implements LottieSplashScreenPlugin\n *\n * Stub implementation for the web. All methods are either no-ops or throw unimplemented exceptions.\n *\n */\nexport class LottieSplashScreenWeb extends WebPlugin {\n    /**\n     * Show the splash screen (not implemented on web).\n     */\n    async show() {\n        console.warn('LottieSplashScreen show() is not supported on web.');\n        return Promise.resolve();\n        // throw this.createUnimplementedError();\n    }\n    /**\n     * Hide the splash screen (not implemented on web).\n     */\n    async hide() {\n        console.warn('LottieSplashScreen hide() is not supported on web.');\n        return Promise.resolve();\n        // throw this.createUnimplementedError();\n    }\n    /**\n     * Notify that the app has loaded (not implemented on web).\n     */\n    async appLoaded() {\n        console.warn('LottieSplashScreen appLoaded() is not supported on web.');\n        return Promise.resolve();\n        // throw this.createUnimplementedError();\n    }\n    /**\n     * Check if the splash screen is animating (always false on web).\n     *\n     * @returns A resolved promise with `{ isAnimating: false }`\n     */\n    async isAnimating() {\n        return { isAnimating: false };\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin"],"mappings":";;;IAAA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;AACK,UAAC,kBAAkB,GAAGA,mBAAc,CAAC,oBAAoB,EAAE;IAChE;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,GAAG,EAAE,MAAM,mDAAe,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,qBAAqB,EAAE,CAAC;IACvE,CAAC;;ICrBD;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAM,qBAAqB,SAASC,cAAS,CAAC;IACrD;IACA;IACA;IACA,IAAI,MAAM,IAAI,GAAG;IACjB,QAAQ,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC;IAC1E,QAAQ,OAAO,OAAO,CAAC,OAAO,EAAE;IAChC;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,IAAI,GAAG;IACjB,QAAQ,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC;IAC1E,QAAQ,OAAO,OAAO,CAAC,OAAO,EAAE;IAChC;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,SAAS,GAAG;IACtB,QAAQ,OAAO,CAAC,IAAI,CAAC,yDAAyD,CAAC;IAC/E,QAAQ,OAAO,OAAO,CAAC,OAAO,EAAE;IAChC;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,WAAW,GAAG;IACxB,QAAQ,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE;IACrC;IACA;;;;;;;;;;;;;;;"}